\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 1
\BOOKMARK [0][-]{chapter.2}{Description of problem}{}% 2
\BOOKMARK [0][-]{chapter.3}{Tree isomorphism algorithms}{}% 3
\BOOKMARK [1][-]{section.3.1}{Top-down maximum common sub-tree isomorphism algorithm}{chapter.3}% 4
\BOOKMARK [1][-]{section.3.2}{Bottom-Up maximum common sub-tree isomorphism algorithm }{chapter.3}% 5
\BOOKMARK [0][-]{chapter.4}{Code compare experiments}{}% 6
\BOOKMARK [1][-]{section.4.1}{Introduction to experiments}{chapter.4}% 7
\BOOKMARK [1][-]{section.4.2}{Experiments on Java source code Flowcharts}{chapter.4}% 8
\BOOKMARK [1][-]{section.4.3}{Experiments using Abstract Syntax Tree graphs}{chapter.4}% 9
\BOOKMARK [1][-]{section.4.4}{Experiments on JavaByte Code}{chapter.4}% 10
\BOOKMARK [0][-]{chapter.5}{Graph transformation algorithms}{}% 11
\BOOKMARK [1][-]{section.5.1}{Introduction to the graph transformation}{chapter.5}% 12
\BOOKMARK [1][-]{section.5.2}{Techniques to normalize AST improving structural comparison}{chapter.5}% 13
\BOOKMARK [1][-]{section.5.3}{Convert graph to tree}{chapter.5}% 14
\BOOKMARK [1][-]{section.5.4}{Text comparison improvement with AST trees}{chapter.5}% 15
\BOOKMARK [0][-]{chapter.6}{Existing Comparison methods}{}% 16
\BOOKMARK [1][-]{section.6.1}{Plagiarism detection methods}{chapter.6}% 17
\BOOKMARK [1][-]{section.6.2}{Text-based Techniques}{chapter.6}% 18
\BOOKMARK [1][-]{section.6.3}{Token-based Techniques}{chapter.6}% 19
\BOOKMARK [1][-]{section.6.4}{Tree-based Techniques}{chapter.6}% 20
\BOOKMARK [1][-]{section.6.5}{PDG-based Techniques}{chapter.6}% 21
\BOOKMARK [0][-]{chapter.7}{Conclusion}{}% 22
\BOOKMARK [0][-]{chapter*.4}{Bibliography}{}% 23
