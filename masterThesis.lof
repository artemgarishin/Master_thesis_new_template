\select@language {english}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Simple textual comparison example in Eclipse compare editor}}{4}{figure.caption.5}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Example of suffix-tree data structure decomposed on word }}{8}{figure.caption.6}
\contentsline {figure}{\numberline {3.2}{\ignorespaces General steps of algorithm to compare code with AST tree}}{12}{figure.caption.7}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Example of program dependency graph derived from java code}}{14}{figure.caption.8}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Top-down maximum common ordered sub-tree of two unordered trees}}{18}{figure.caption.9}
\contentsline {figure}{\numberline {4.2}{\ignorespaces The final solution of bipartite matching}}{19}{figure.caption.10}
\contentsline {figure}{\numberline {4.8}{\ignorespaces Bottom Up maximum common ordered sub-tree of two unordered trees}}{23}{figure.caption.16}
\contentsline {figure}{\numberline {4.9}{\ignorespaces Bottom Up maximum common equivalence classes on trees}}{23}{figure.caption.17}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces Java flowchart diagram opened in java source-code visualizer}}{27}{figure.caption.18}
\contentsline {figure}{\numberline {5.2}{\ignorespaces Extracted control flow graph from java source code}}{28}{figure.caption.19}
\contentsline {figure}{\numberline {5.3}{\ignorespaces Two pieces of code are compared with Eclipse text compare editor}}{29}{figure.caption.20}
\contentsline {figure}{\numberline {5.4}{\ignorespaces Compared flowchart graphs using TDMC algorithm \ref {sec:topdown} }}{30}{figure.caption.21}
\contentsline {figure}{\numberline {5.5}{\ignorespaces Java byte code compared in Eclipse text compare editor}}{32}{figure.caption.24}
\contentsline {figure}{\numberline {5.6}{\ignorespaces Java byte code compared with text compare editor in Eclipse}}{33}{figure.caption.25}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {7.1}{\ignorespaces Example shows that text compare is not able to identify similarity}}{37}{figure.caption.26}
\contentsline {figure}{\numberline {7.2}{\ignorespaces Graph comparison on similar AST trees using TDMC algorithm}}{38}{figure.caption.27}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {8.1}{\ignorespaces Textual comparison example showing inability to detect swapped clones}}{40}{figure.caption.29}
\contentsline {figure}{\numberline {8.2}{\ignorespaces Text comparison example where strings of code are replaced.}}{41}{figure.caption.30}
\contentsline {figure}{\numberline {8.3}{\ignorespaces Abstract Syntax Tree of function \texttt {test1()}}}{42}{figure.caption.31}
\contentsline {figure}{\numberline {8.4}{\ignorespaces Abstract Syntax Tree of function \texttt {test2()}}}{43}{figure.caption.32}
\contentsline {figure}{\numberline {8.5}{\ignorespaces Example of hashed branch content that assists to optimize the algorithm search for clones}}{45}{figure.caption.33}
\addvspace {10\p@ }
